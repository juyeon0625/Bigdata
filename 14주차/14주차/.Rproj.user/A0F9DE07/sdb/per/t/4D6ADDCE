{
    "collab_server" : "",
    "contents" : "data1 <- read.csv(\"d:\\\\shops_training27.csv\", header=TRUE)\ndata2 <- read.csv(\"d:\\\\shops_test27.csv\", header=TRUE)\n\n\n#################### 휴일 1\ndata1$anniversary <- ifelse(data1$anniversary == \"평일\", 0, 1)\ndata1$before_anniversary <- ifelse(data1$before_anniversary == \"평일\", 0, 1)\ndata1$after_anniversary <- ifelse(data1$after_anniversary == \"평일\", 0, 1)\n\ndata2$anniversary <- ifelse(data2$anniversary == \"평일\", 0, 1)\ndata2$before_anniversary <- ifelse(data2$before_anniversary == \"평일\", 0, 1)\ndata2$after_anniversary <- ifelse(data2$after_anniversary == \"평일\", 0, 1)\n\ndata1$isHoliday <- ifelse(data1$isHoliday == TRUE, 1, 0)\ndata1$before_isHoliday <- ifelse(data1$before_isHoliday == TRUE, 1, 0)\ndata1$after_isHoliday <- ifelse(data1$after_isHoliday == TRUE, 1, 0)\n\ndata2$isHoliday <- ifelse(data2$isHoliday == TRUE, 1, 0)\ndata2$before_isHoliday <- ifelse(data2$before_isHoliday == TRUE, 1, 0)\ndata2$after_isHoliday <- ifelse(data2$after_isHoliday == TRUE, 1, 0)\n\n#################### 비 안개 1\ndata1$fog <- ifelse(data1$fog == TRUE, 1, 0)\ndata1$rain <- ifelse(data1$rain == TRUE, 1, 0)\n\ndata2$fog <- ifelse(data2$fog == TRUE, 1, 0)\ndata2$rain <- ifelse(data2$rain == TRUE, 1, 0)\n\n\n################ 변수 표준화 \nd <- data.frame(data1$prediction_orders, data1$anniversary, data1$ES_orders_25, data1$holiday_order)\ns_d <- scale(d)\n\ns_anni <- scale(data1$anniversary)\ns_pre <- scale(data1$prediction_orders)\ns_ES25 <- scale(data1$ES_orders_25)\ns_holior <- scale(data1$holiday_order)\n############## 상관행렬 구하기 \ncorr <- cor(d)\nround(corr, 2)\n\n############## 고유값 \neg <- eigen(cor(s_d))\nsc <- s_d %*% eg$vectors[,1:2]\n\n############## 주성분 \nz1 <- (-0.6199058)*s_pre + (-0.3541140)*s_anni + (-0.2938699)*s_ES25 + (-0.6355790)*s_holior\nz2 <- (-0.09004810)*s_pre + (-0.58925330)*s_anni + (0.80162510)*s_ES25 + (0.04548717)*s_holior\n\n\nbiplot(-sc, -eg$vectors[,1:2])\nrownames(eg$vectors) = colnames(d)\ns <- princomp(d, cor=TRUE)\nsummary(s)\n\n#################### 범위 18등분\nrange(data1$class_orders)\ndata1_range <- (max(data1$class_orders) - min(data1$class_orders)) / 18\n\nrv <- seq(from = 20, by = data1_range, to = 422)\n\ndata1$class_orders <- as.numeric(cut(data1$class_orders, rv, label = c(1:18)))\ndata2$class_orders <- as.numeric(cut(data2$class_orders, rv, label = c(1:18)))\n\ntable(data1$class_orders)\ntable(data2$class_orders)\n\n\n\n######################### MAPE\nMAPE <- function(y, exp_y){\n  return( sum(abs(y - exp_y)/y)/length(y) * 100 )\n}\n\n\n######################### Confusion Matrix 출력 및 모델 성능 분석 함수\ncalculate <- function(actual, predicted){ # 패러미터는 모두 벡터\n  \n  predicted <- round(predicted)\n  res <- actual - predicted\n  res_table <- table(res)\n  \n  tp_range <- ifelse(-1 <= res & res <= 1, 1, 0)\n  fp_range <- ifelse(res > 1, 1, 0)\n  fn_range <- ifelse(res < -1, 1, 0)\n  \n  tp <- sum(tp_range) # 실제 값과 일치하며 양수\n  fp <- sum(fp_range) # 불일치 양수 값\n  fn <- sum(fn_range) # 불일치 음수 값\n  \n  P <- tp / (tp + fp)\n  R <- tp / (tp + fn)\n  F_measure <- 2 * R * P / (R+P)\n  \n  # Confusion Matrix\n  conf_matrix <- matrix( c(tp, fp, fn, NA), nrow = 2, ncol = 2)\n  colnames(conf_matrix) = c(\"Forecast = P\", \" N\")\n  rownames(conf_matrix) = c(\"TP FN\", \"FP TN\")\n  \n  cat(\"True Positive  : \", tp, \"\\n\",\n      \"False Positive : \", fp, \"\\n\",\n      \"False Negative : \", fn, \"\\n\\n\",\n      \"-----------------------\\n\",\n      \"Total          : \", length(predicted), \"/\", length(actual), \"\\n\\n\",\n      \n      \"MAPE      : \", MAPE(actual, predicted), \"\\n\",\n      \"Precision : \", P, \"\\n\",\n      \"Recall    : \", R, \"\\n\",\n      \"F-Measure : \", F_measure, \"\\n\\n\")\n  \n  return (conf_matrix)\n  \n}\n\ninstall.packages(\"tree\")\nlibrary(tree)\n\nattach(data1)\n\nmytree <- tree(class_orders~ anniversary\n               + prediction_orders\n               + holiday_order\n               ,data1)\nsummary(mytree)\nplot(mytree)\ntext(mytree, all = T)\n\npred <- predict(mytree, newdata = data2)\npred_round <- round(pred)\n\ntable(data2$class_orders - pred_round)\n\ncalculate(data2$class_orders, pred)\n",
    "created" : 1480578888252.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2061570946",
    "id" : "4D6ADDCE",
    "lastKnownWriteTime" : 1481107399,
    "last_content_update" : 1481107399536,
    "path" : "C:/Users/juyeon/Desktop/R/14주차/14주차/1.R",
    "project_path" : "1.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}