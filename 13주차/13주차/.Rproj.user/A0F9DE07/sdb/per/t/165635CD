{
    "collab_server" : "",
    "contents" : "data1 <- read.csv(\"d:\\\\shops_training27.csv\", header=TRUE)\ndata2 <- read.csv(\"d:\\\\shops_test27.csv\", header=TRUE)\n\ninstall.packages(\"party\")\nlibrary(party)\n\n######################################## TRUE, FALSE -> 1, 0\n\nfor(i in length(data1$isHoliday)){\n  data1$isHoliday[i] = ifelse(data1$isHoliday[i] == \"FALSE\", 0, 1) #휴일x 0, 휴일 1\n}\n\nfor(i in length(data2$isHoliday)){\n  data2$isHoliday[i] = ifelse(data2$isHoliday[i] == \"FALSE\", 0, 1) #휴일x 0, 휴일 1\n}\n\nfor(i in length(data1$before_isHoliday)){\n  data1$before_isHoliday[i] = ifelse(data1$before_isHoliday[i] == \"FALSE\", 0, 1) #휴일x 0, 휴일 1\n}\n\nfor(i in length(data2$before_isHoliday)){\n  data2$before_isHoliday[i] = ifelse(data2$before_isHoliday[i] == \"FALSE\",  0, 1) #휴일x 0, 휴일 1\n}\n\nfor(i in length(data1$after_isHoliday)){\n  data1$after_isHoliday[i] = ifelse(data1$after_isHoliday[i] == \"FALSE\", 0 , 1) #휴일x 0, 휴일 1\n}\n\nfor(i in length(data2$after_isHoliday)){\n  data2$after_isHoliday[i] = ifelse(data2$after_isHoliday[i] == \"FALSE\", 0, 1)  #휴일x 0, 휴일 1\n}\n\nfor(i in length(data1$rain)){\n  data1$rain[i] = ifelse(data1$rain[i] == \"TRUE\", 1, 0)\n}\n\nfor(i in length(data2$rain)){\n  data2$rain[i] = ifelse(data2$rain[i] == \"TRUE\", 1, 0)\n}\n\nfor(i in length(data1$fog)){\n  data1$fog[i] = ifelse(data1$fog[i] == \"TRUE\", 1, 0)\n}\n\nfor(i in length(data2$fog)){\n  data2$fog[i] = ifelse(data2$fog[i] == \"TRUE\", 1, 0)\n}\n\n# 국경일인 경우 1\n\ndata1$anniversary <- ifelse(data1$anniversary == \"평일\", 0, 1) \ndata1$before_anniversary <- ifelse(data1$before_anniversary == \"평일\", 0, 1) \ndata1$after_anniversary <- ifelse(data1$after_anniversary == \"평일\", 0, 1)\n\ndata2$anniversary <- ifelse(data2$anniversary == \"평일\", 0, 1) \ndata2$before_anniversary <- ifelse(data2$before_anniversary == \"평일\", 0, 1) \ndata2$after_anniversary <- ifelse(data2$after_anniversary == \"평일\", 0, 1)\n\n######################################## tree \n\nattach(data1)\nmyformula <- (class_orders ~ anniversary\n              + before_anniversary\n              + after_anniversary\n              + isHoliday\n              + after_isHoliday\n              + holiday_order\n              + rain\n              + fog\n              + temp_highest\n              + LYSM_similarDates_avg_orders\n              + prediction_orders\n              #+ ES_orders_25\n              + ES_orders_75\n              + similarDates_movingAvg_orders\n              + underlyingInflationRate\n              + importChangeRate\n              + football_national_cnt\n              + naverTrend_Shop_lastweek\n)\n\ndata_ctree <- ctree(myformula, data = data1)\ntable(predict(data_ctree, data1), data1$class_orders)\n\nprint(data_ctree)\nplot(data_ctree)\nplot(data_ctree, type=\"simple\")\n\ntestPred <- predict(data_ctree, newdata = data2)\ntable(testPred, data2$class_orders)\n\n################################## 18개로 구간 나누기 \nrange(data1$class_orders)\ndata1_range <- ((max(data1$class_orders)) - (min(data1$class_orders)))/18\n\nr1 <- seq(from=20, by=data1_range, to=422)\npr <- cut(testPred, r1, labels=c(1:18))\ntr <- cut(data2$class_orders, r1, labels=c(1:18))\n\ntable(pr)\ntable(tr)\n\n######################### MAPE\nMAPE <- function(y, exp_y){\n  \n  return( sum(abs(y - exp_y)/y)/length(y) * 100 )\n}\n######################### Confusion Matrix 출력 및 모델 성능 분석 함수\n\ncalculate <- function(actual, predicted){ # 패러미터는 모두 벡터\n  \n  predicted <- round(predicted)\n  res <- actual - predicted\n  res_table <- table(res)\n  \n  tp_range <- ifelse(-1 <= res & res <= 1, 1, 0)\n  fp_range <- ifelse(res > 1, 1, 0)\n  fn_range <- ifelse(res < -1, 1, 0)\n  \n  tp <- sum(tp_range) # 실제 값과 일치하며 양수\n  fp <- sum(fp_range) # 불일치 양수 값\n  fn <- sum(fn_range) # 불일치 음수 값\n  \n  P <- tp / (tp + fp)\n  R <- tp / (tp + fn)\n  F_measure <- 2 * R * P / (R+P)\n  \n  # Confusion Matrix\n  conf_matrix <- matrix( c(tp, fp, fn, NA), nrow = 2, ncol = 2)\n  colnames(conf_matrix) = c(\"Forecast = P\", \" N\")\n  rownames(conf_matrix) = c(\"TP FN\", \"FP TN\")\n  \n  cat(\"True Positive  : \", tp, \"\\n\",\n      \"False Positive : \", fp, \"\\n\",\n      \"False Negative : \", fn, \"\\n\\n\",\n      \"-----------------------\\n\",\n      \"Total          : \", length(predicted), \"/\", length(actual), \"\\n\\n\",\n      \n      \"MAPE      : \", MAPE(actual, predicted), \"\\n\",\n      \"Precision : \", P, \"\\n\",\n      \"Recall    : \", R, \"\\n\",\n      \"F-Measure : \", F_measure, \"\\n\\n\")\n  \n  return (conf_matrix)\n  \n}\ncalculate(data2$class_orders, testPred)\n\n\n\n\n\n\n\n\n\n\nmyformula <- (class_orders ~ anniversary\n              #+ before_anniversary\n              #+ after_anniversary\n              + isHoliday\n              #+ after_isHoliday\n              + holiday_order\n              + rain\n              + fog\n              + temp_highest\n              + LYSM_similarDates_avg_orders\n              + prediction_orders\n              + ES_orders_25\n              + ES_orders_75\n              #+ similarDates_movingAvg_orders\n              #+ underlyingInflationRate\n              #+ importChangeRate\n              + football_national_cnt\n              + naverTrend_Shop_lastweek\n)\n\n\ndata_ctree <- ctree(myformula, data = data1)\ntestPred <- predict(data_ctree, newdata = data2)\n\nr1 <- seq(from=20, by=data1_range, to=422)\npr <- cut(testPred, r1, labels=c(1:18))\ntr <- cut(data2$class_orders, r1, labels=c(1:18))\n\ncalculate(data2$class_orders, testPred)\n\n\n\n\n\n다넣었을ㄸ\nMAPE      :  14.64444 \nPrecision :  0.04583333 \nRecall    :  0.1009174 \nF-Measure :  0.06303725",
    "created" : 1480509671275.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "834530829",
    "id" : "165635CD",
    "lastKnownWriteTime" : 1480862228,
    "last_content_update" : 1480862228729,
    "path" : "C:/Users/juyeon/Desktop/R/13주차/13주차/다시.R",
    "project_path" : "다시.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}