load("C:/Users/juyeon/Desktop/R/R Data/gssdata.rdata")
View(gssdata)
head(gssdata)
summary(gssdata)
CV(gssdata)
CV <- function(x) sd(x)/mean(x)
CV(gssdata)
CV(satjob1)
scale(gssdata)
load("C:/Users/juyeon/Desktop/R/R Data/faithful.rdata")
View(faithful)
faithful -> Yellowstone
head(faithful)
waiting <- faithful[,2]
range(waiting)
table(waiting)
load("C:/Users/juyeon/Desktop/R/R Data/dataset.rdata")
attach(dataset)
table(Sex, Age)
load("C:/Users/juyeon/Desktop/R/R Data/Car_Colors.rdata")
Car_Colors <- data.frame(Color - factor(), Percent = numeric())
Car_Colors <- edit(Car_Colors)
Car_Colors
attach(Car_Colors)
pie(Percent)
pie(Percent, col=Color)
names(Percent) <- Color
pie(Percent, col=colors, main="Pie Graph of Auto Color Preferences")
names(Percent) <- Color
attach(Car_Colors)
pie(Percent)
Car_Colors <- edit(Car_Colors)
Car_Colors
attach(Car_Colors)
pie(Percent)
pie(Percent)
Car_Colors <- edit(Car_Colors)
Car_Colors <- edit(Car_Colors)
Car_Colors
attach(Car_Colors)
pie(Percent)
pie(Percent, col=Color)
names(Percent) <- Color
pie(Percent, col=color, main="Pie Graph of Auto Color Preferences")
pie(Percent, col=Color, main="Pie Graph of Auto Color Preferences")
barplot(Percent, col=colors, main = "Bar Chart of Auto Color Preferences")
attach(grades)
load("C:/Users/juyeon/Desktop/R/R Data/grades.rdata")
barplot(Percent, col=colors, main = "Bar Chart of Auto Color Preferences")
attach(grades)
attach(dataset)
boxplot(Age, main = "Boxplot for Age")
load("C:/Users/juyeon/Desktop/R/R Data/quizzes.rdata")
quizzes
boxplot(quizzes)
attach(faithful)
hist(waiting)
load("C:/Users/juyeon/Desktop/R/R Data/Min_Wage.rdata")
attach(Min_Wage)
Min_Wage
plot(Value, type='o', xlab="Year", col="blue", main="Minimum Wage")
plot(Value, type="o", xlab="Year", col="blue", main="Minimum Wage")
plot(Year, Value, type="o")
Min_Wage
plot(Value, type="o", xlab="Year", col="blue", main="Minimum Wage")
plot(Year, Value, type="o")
plot(Value, type="o", xlab="Year", col="blue", main="Minimum Wage")
plot(Value, type="o", col="blue", main="Minimum Wage")
plot(type="o", col="blue", main="Minimum Wage")
plot(Percent, type="o", col="blue", main="Minimum Wage")
load("C:/Users/juyeon/Desktop/R/R Data/hours.rdata")
Hours GPA
Hours
attach(Hours)
Hours
plot(Hours, GPA)
attach(hours)
hours
plot(hours, GPA)
plot(hours, GPA, abline(lm(GPA~hours)), main="Scatterplot of Hour and GPA")
plot(hours, GPA)
plot(hours, GPA, abline(lm(GPA~hours)), main="Scatterplot of Hour and GPA")
iris
plot(iris)
sim = function (nreps) {
commdata = list() #새 위원회에 대한 정보를 입력할 곳
commdata$countabsamecomm = 0
for (rep in 1:nreps) {
commdata$whosleft = 1:20 #위원회를 뽑을 대상
commdata$numabchosen = 0 #A, B중 이미 뽑힌 대상
commdata = choosecomm (commdata, 5)
if (commdata$abchosen > 0) next
commdata = choosecomm(commdata, 4)
if (commdata$numabchosen > 0) next
commdata = choosecomm(commdata, 3)
}
print(commdata$countabsamecomm/nreps)
}
choosecomm = function(comdat, comesize)
{
committee = sample(comdat$whosleft, comsize)
comdat$numabchosen = length(intersect(1:2, committee))
if (comdat$numabchosen == 2)
comdat$countabsamecomm = comdat$countabsamecomm + 1
comdat$whosleft = stediff(comdat$whosleft, committee)
return(comdat)
}
sim(1)
sim = function (nreps) {
commdata = list() #새 위원회에 대한 정보를 입력할 곳
commdata$countabsamecomm = 0
for (rep in 1:nreps) {
commdata$whosleft = 1:20 #위원회를 뽑을 대상
commdata$numabchosen = 0 #A, B중 이미 뽑힌 대상
commdata = choosecomm (commdata, 5)
if (commdata$abchosen > 0) next
commdata = choosecomm(commdata, 4)
if (commdata$numabchosen > 0) next
commdata = choosecomm(commdata, 3)
}
print(commdata$countabsamecomm/nreps)
}
choosecomm = function(comdat, comsize)
{
committee = sample(comdat$whosleft, comsize)
comdat$numabchosen = length(intersect(1:2, committee))
if (comdat$numabchosen == 2)
comdat$countabsamecomm = comdat$countabsamecomm + 1
comdat$whosleft = stediff(comdat$whosleft, committee)
return(comdat)
}
sim(1)
sim = function (nreps) {
commdata = list() #새 위원회에 대한 정보를 입력할 곳
commdata$countabsamecomm = 0
for (rep in 1:nreps) {
commdata$whosleft = 1:20 #위원회를 뽑을 대상
commdata$numabchosen = 0 #A, B중 이미 뽑힌 대상
commdata = choosecomm (commdata, 5)
if (commdata$abchosen > 0) next
commdata = choosecomm(commdata, 4)
if (commdata$numabchosen > 0) next
commdata = choosecomm(commdata, 3)
}
print(commdata$countabsamecomm/nreps)
}
choosecomm = function(comdat, comsize)
{
committee = sample(comdat$whosleft, comsize)
comdat$numabchosen = length(intersect(1:2, committee))
if (comdat$numabchosen == 2)
comdat$countabsamecomm = comdat$countabsamecomm + 1
comdat$whosleft = setdiff(comdat$whosleft, committee)
return(comdat)
}
sim(1)
sim = function (nreps) {
commdata = list() #새 위원회에 대한 정보를 입력할 곳
commdata$countabsamecomm = 0
for (rep in 1:nreps) {
commdata$whosleft = 1:20 #위원회를 뽑을 대상
commdata$numabchosen = 0 #A, B중 이미 뽑힌 대상
commdata = choosecomm (commdata, 5)
if (commdata$numabchosen > 0) next
commdata = choosecomm(commdata, 4)
if (commdata$numabchosen > 0) next
commdata = choosecomm(commdata, 3)
}
print(commdata$countabsamecomm/nreps)
}
choosecomm = function(comdat, comsize)
{
committee = sample(comdat$whosleft, comsize)
comdat$numabchosen = length(intersect(1:2, committee))
if (comdat$numabchosen == 2)
comdat$countabsamecomm = comdat$countabsamecomm + 1
comdat$whosleft = setdiff(comdat$whosleft, committee)
return(comdat)
}
sim(1)
sim(10)
for(i in 1:10) sim(10)
for(i in 1:10) sim(10)
for(i in 1:10) sim(10)
for(i in 1:10) sim(10)
for(i in 1:10) sim(10)
for(i in 1:10) sim(100)
