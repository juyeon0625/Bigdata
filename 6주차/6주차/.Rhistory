limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e += 1
cat(i)
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i)
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i)
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i)
}
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i)
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i)
if(e %% 20 == 0) "\n"
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i)
if(e %% 20 == 0) "\n"
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i, "\n")
if(e %% 20 == 0) "\n"
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i," ")
if(e %% 20 == 0) "\n"
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i," ")
if(e %% 20 == 0) {"\n"}
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:100){
if(primality(i) == "Yes.") {
e = e + 1
cat(i," ")
if(e %% 20 == 0) {"\n"}
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:100){
if(primality(i) == "Yes.") {
e = e + 1
cat(i," ")
if(e %% 20 == 0) {cat("\n")}
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i," ")
if(e %% 20 == 0) {cat("\n")}
}
}
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i," ")
if(e %% 20 == 0) {cat("\n")}
}
}
cat("소수개수 : ", e, "개")
read.csv("C:/Users/juyeon/Desktop/shop_training27.csv")
getwd()
read.csv("C:/Users/juyeon/Desktop/R/6주차/6주차")
shop <- read.csv("shop_training27.csv", header = TRUE, skip = 1)
shop
summary(shop[20])
head(shop)
cor(X16, X16)
as.numeric(X27)
summary(X27)
read.csv("C:/Users/juyeon/Desktop/shop_training27.csv")
getwd()
read.csv("C:/Users/juyeon/Desktop/R/6주차/6주차")
shop <- read.csv("shop_training27.csv", header = TRUE, skip = 1)
shop
summary(shop[20])
head(shop)
read.csv("C:/Users/juyeon/Desktop/shop_training27.csv")
getwd()
read.csv("C:/Users/juyeon/Desktop/R/6주차/6주차")
shop <- read.csv("shop_training27.csv", header = TRUE, skip = 1)
shop
summary(shop[20])
head(shop)
shop <- read.csv("shop_training27.csv", header = TRUE, skip = 1)
summary(shop[20])
head(shop)
summary(shop[20])
head(shop)
summary(shop)
for (i in anniversary){
ifelse(i == "평일", i <- 0, i <- 1)
}
shop <- read.csv("shop_training27.csv", header = TRUE, skip = 1)
summary(shop)
head(shop)
for (i in anniversary){
ifelse(i == "평일", i <- 0, i <- 1)
}
shop <- read.csv("shop_training27.csv", header = TRUE, skip = 1)
summary(shop)
head(shop)
attach(shop)
for (i in anniversary){
ifelse(i == "평일", i <- 0, i <- 1)
}
anniversary
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", ann <- c(ann, 1), ann <- c(ann, 0))
}
anniversary
anniversary
attach(shop)
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 1), ann <- c(anni, 0))
}
anniversary
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 1), ann <- c(anni, 0))
}
anniversary
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 1), anni <- c(anni, 0))
}
anniversary
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, "1"), anni <- c(anni, "0"))
}
anniversary
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, "1"), anni <- c(anni, "0"))
}
anni
attach(shop)
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 1), anni <- c(anni, 0))
}
anni
anni
shop(anniversary) <- anni
attach(shop)
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 1), anni <- c(anni, 0))
}
anni
shop(anniversary) <- anni
shop$anniversary <- anni
isH <- NULL
for (i in isHoliday){
ifelse(i == "FALSE", isH <- c(isH, 1), isH <- c(isH, 0) )
}
shop$isHoliday <- isH
cor(anniversary, class_orders)
anniversary
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 1), anni <- c(anni, 0))
}
shop$anniversary <- anni
anniversary
anni
shop$anniversary <- anni
shop$anniversary
cor(anni, class_orders)
before <- NULL
for (i in before_isHoliday){
ifelse(i == "FALSE", before <- c(before, 1), before <- c(before, 0))
}
shop$before_isHoliday <- before
after <- NULL
for (i in after_isHoliday){
ifelse(i == "FALSE", after <- c(after, 1), after <- c(after, 0))
}
shop$after_isHoliday <- after
rainy <- NULL
for (i in rain){
ifelse(i == "FALSE", rainy <- c(rainy, 1), rainy<- c(rainy, 0))
}
shop$rain <- rainy
foggy <- NULL
for (i in fog){
ifelse(i == "FALSE", foggy <- c(foggy, 1), foggy <- c(foggy, 0))
}
shop$fog <- foggy
rainy <- NULL
for (i in rain){
ifelse(i == "TRUE", rainy <- c(rainy, 1), rainy<- c(rainy, 0))
}
shop$rain <- rainy
foggy <- NULL
for (i in fog){
ifelse(i == "TRUE", foggy <- c(foggy, 1), foggy <- c(foggy, 0))
}
shop$fog <- foggy
cor(anni, class_orders)
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 0), anni <- c(anni, 1))
}
shop$anniversary <- anni
cor(anni, class_orders)
isH <- NULL
for (i in isHoliday){
ifelse(i == "FALSE", isH <- c(isH, 1), isH <- c(isH, 0) )
}
shop$isHoliday <- isH
cor(isH, class_orders)
isH <- NULL
for (i in isHoliday){
ifelse(i == "FALSE", isH <- c(isH, 0), isH <- c(isH, 1) )
}
shop$isHoliday <- isH
cor(isH, class_orders)
before <- NULL
for (i in before_isHoliday){
ifelse(i == "FALSE", before <- c(before, 1), before <- c(before, 0))
}
shop$before_isHoliday <- before
cor(before, class_orders)
after <- NULL
for (i in after_isHoliday){
ifelse(i == "FALSE", after <- c(after, 1), after <- c(after, 0))
}
shop$after_isHoliday <- after
cor(after, class_orders)
rainy <- NULL
for (i in rain){
ifelse(i == "TRUE", rainy <- c(rainy, 1), rainy<- c(rainy, 0))  #비가 오는 날 1, 비가 오지 않는날 0
}
shop$rain <- rainy
cor(rainy, class_oreders)
cor(rainy, class_orders)
foggy <- NULL
for (i in fog){
ifelse(i == "TRUE", foggy <- c(foggy, 1), foggy <- c(foggy, 0))  #안개가 많이 낀 날 1, 안개가 끼지 않은 날 0
}
shop$fog <- foggy
cor(foggy, class_orders)
foggy <- NULL
for (i in fog){
ifelse(i == "TRUE", foggy <- c(foggy, 0), foggy <- c(foggy, 1))  #안개가 낀 날 0, 안개가 끼지 않은 날 1
}
shop$fog <- foggy
cor(foggy, class_orders)
?parameter
?par
par
primality <-function(x) {
stopifnot(x >= 2) # x가2보다작다면에러를반환
limit <-trunc(sqrt(x) + 1)
testvec<-2:limit
results <-x %% testvec
check <-any(results == 0)
outcome <-"Yes."
if(check == TRUE) outcome <-"No."
if(x == 2) outcome <-"Yes."
return (outcome)
}
e <- 0
for(i in 3:10000){
if(primality(i) == "Yes.") {
e = e + 1
cat(i," ")
if(e %% 20 == 0) {cat("\n")}
}
}
cat("소수개수 : ", e, "개")
shop <- read.csv("shop_training27.csv", header = TRUE, skip = 1)
summary(shop)
head(shop)
anni <- NULL
for (i in anniversary){
ifelse(i == "평일", anni <- c(anni, 0), anni <- c(anni, 1))  #평일일 때는 0, 국경일일 때는 1
}
shop$anniversary <- anni  #0과 1로 설정한 anniverary를 shop에 있는 anniversary에 설정
isH <- NULL
for (i in isHoliday){
ifelse(i == "FALSE", isH <- c(isH, 0), isH <- c(isH, 1) )  #휴일이 아닐 때는 0, 휴일일 때에는 1
}
shop$isHoliday <- isH  #0과 1로 설정한 isHoliday를 shop에 있는 isHoliday에 설정
before <- NULL
for (i in before_isHoliday){
ifelse(i == "FALSE", before <- c(before, 0), before <- c(before, 1))  #휴일 전 날이 아닐 때는 0, 휴일 전 날일 때는 1
}
shop$before_isHoliday <- before  #0과 1로 설정한 before_isHoliday를 shop에 있는 before_isHoliday에 설정
after <- NULL
for (i in after_isHoliday){
ifelse(i == "FALSE", after <- c(after, 0), after <- c(after, 1))  #휴일 다음 날이 아닐 때는 0, 휴일 다음 날일 때는 1
}
shop$after_isHoliday <- after
rainy <- NULL
for (i in rain){
ifelse(i == "TRUE", rainy <- c(rainy, 1), rainy<- c(rainy, 0))  #비가 오는 날 1, 비가 오지 않는날 0
}
shop$rain <- rainy
foggy <- NULL
for (i in fog){
ifelse(i == "TRUE", foggy <- c(foggy, 0), foggy <- c(foggy, 1))  #안개가 낀 날 0, 안개가 끼지 않은 날 1
}
shop$fog <- foggy
cor(isH, class_orders)
cor(before, class_orders)
cor(after, class_orders)
cor(rainy, class_orders)
cor(foggy, class_orders)
